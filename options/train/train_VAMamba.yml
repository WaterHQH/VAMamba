name: VAMamba_depth6
model_type: VAMambaModel
scale: 1
num_gpu: 2
manual_seed: 42

# dataset and data loader settings
datasets:
  train:
    task: dehazy
    name: dehazing_dataset
    type: PairedImageDataset
    dataroot_gt: /home/hh/MambaIR-mambair/datasets/SOTS_outdoor/train/gt
    dataroot_lq: /home/hh/MambaIR-mambair/datasets/SOTS_outdoor/train/hazy_new
    filename_tmpl: '{}_lq'
    io_backend:
      type: disk

    gt_size: 128
    use_hflip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 10
    batch_size_per_gpu: 16
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    task: dehazy
    name: dehazing_dataset
    type: PairedImageDataset
    dataroot_gt: ~
    dataroot_lq: ~
    filename_tmpl: '{}_lq'
    io_backend:
      type: disk

# network structures
network_g:
  type: VAMamba
  upscale: 1
  in_chans: 3
  img_size: 256
  img_range: 1.
  d_state: 16
  depths: [6, 6, 6, 6, 6, 6]
  embed_dim: 180
  mlp_ratio: 1.2

  # LoRA配置
  use_lora: True
  lora_rank: 16
  # Cache配置
  use_cache: True
  cache_size: 5

  # 自适应扫描配置
  use_adaptive_scan: False
  score_map_patch_size: 32

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~
# training settings
train:
  optim_g:
    type: Adam
    # lr: !!float 2e-4 # for jpeg 40
    lr: !!float 1e-4 # for jpeg 30/10
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    # milestones: [ 800000, 1200000, 1400000, 1500000 ] # for jpeg 40
    milestones: [ 400000, 600000, 700000, 750000 ] # for jpeg 10/30
    gamma: 0.5

  # total_iter: 1600000 # for jpeg 40
  total_iter: 800000 # for jpeg 10/30
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

    # type: FrequencyLoss
    # criterion: l1          # l1 | l2
    # use_log: true          # 频域对数幅度
    # high_freq_boost: 1.0   # 高频增强指数，0关闭
    # loss_weight: 0.1
    # reduction: mean        # none | mean | sum
# validation settings
val:
  val_freq: !!float 5e3
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 2
      test_y_channel: true

    ssim: # metric name, can be arbitrary
      type: calculate_ssim
      crop_border: 2
      test_y_channel: true
    lpips: # 添加LPIPS指标
      type: calculate_lpips
      crop_border: 0
      test_y_channel: true
    mae_y: # 添加MAE Y通道指标
      type: calculate_mae_y
      crop_border: 2
      test_y_channel: true

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
